---
import "../styles/main.scss";
import { initializeApp } from "firebase/app";
import { getAuth } from "firebase/auth";

const firebaseConfig = {
    apiKey: import.meta.env.PUBLIC_FIREBASE_API_KEY,
    authDomain: import.meta.env.PUBLIC_FIREBASE_AUTH_DOMAIN,
    projectId: import.meta.env.PUBLIC_FIREBASE_PROJECT_ID,
    storageBucket: import.meta.env.PUBLIC_FIREBASE_STORAGE_BUCKET,
    messagingSenderId: import.meta.env.PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
    appId: import.meta.env.PUBLIC_FIREBASE_APP_ID,
};
const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
---

<div class="page_wrap">
    <h1>アカウント登録</h1>
    <div class="form_wrap">
        <form id="register_form">
            <div class="page_user">
                <span class="user_icon"></span>
                <input
                    type="email"
                    name="email"
                    placeholder="アカウント名"
                    required
                />
            </div>
            <div class="page_pass">
                <span class="pass_icon"></span>
                <input
                    type="password"
                    name="password"
                    placeholder="パスワード"
                    required
                />
            </div>
            <button type="submit" class="btn">アカウント登録</button>
        </form>

        <div class="acount_hav">
            <div class="line_wrap"><span class="line">or</span></div>
            <p><a href="/account/login">すでにアカウントをお持ちの方</a></p>
        </div>
    </div>
</div>

<script type="module">
    import { createUserWithEmailAndPassword } from "firebase/auth";
    import { auth } from "../firebase/client";

    const form = document.getElementById("register_form");
    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        try {
            await createUserWithEmailAndPassword(
                auth,
                form.email.value.trim(),
                form.password.value,
            );
            window.location.href = "/account/login";
        } catch (err) {
            alert(err.message);
        }
    });
</script>
